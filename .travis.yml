language:
  - objective-c

osx_image: xcode12.2

before_script:
    # Essentially turn off logging. Temporarily undo if more info is needed
    - sudo log config --mode "level:default" --subsystem com.abbey-code.UnzipKit

matrix:
  include:
   - stage: Test
     env: Name=Mac-Fail-Fast
     # The CLANG arguments and find command fail the build on analyzer errors
     script: xcodebuild -workspace UnzipKit.xcworkspace -scheme UnzipKit -testPlan Fast -sdk macosx -configuration Release analyze test ENABLE_NS_ASSERTIONS=1 CLANG_ANALYZER_OUTPUT=html CLANG_ANALYZER_OUTPUT_DIR=analyzer-output && [[ -z `find analyzer-output -name "*.html"` ]]

   - stage: Test
     env: Name=Mac
     # The CLANG arguments and find command fail the build on analyzer errors
     script: xcodebuild -workspace UnzipKit.xcworkspace -scheme UnzipKit -testPlan Rigorous -sdk macosx -configuration Release analyze test ENABLE_NS_ASSERTIONS=1 CLANG_ANALYZER_OUTPUT=html CLANG_ANALYZER_OUTPUT_DIR=analyzer-output && [[ -z `find analyzer-output -name "*.html"` ]]

   - stage: Test
     env: Name=iOS
     # The CLANG arguments and find command fail the build on analyzer errors
     script: xcodebuild -workspace UnzipKit.xcworkspace -scheme UnzipKit -testPlan Rigorous -destination 'platform=iOS Simulator,name=iPhone 8,OS=latest' -configuration Release analyze test ENABLE_NS_ASSERTIONS=1 CLANG_ANALYZER_OUTPUT=html CLANG_ANALYZER_OUTPUT_DIR=analyzer-output && [[ -z `find analyzer-output -name "*.html"` ]]

   - stage: Test
     env: Name=DemoAppBuild
     # The CLANG arguments and find command fail the build on analyzer errors
     script: ./Scripts/install-demo-libs.sh && xcodebuild -workspace UnzipKitDemo/UnzipKitDemo.xcworkspace -scheme UnzipKitDemo -destination 'platform=iOS Simulator,name=iPhone 8,OS=latest' -configuration Release analyze test ENABLE_NS_ASSERTIONS=1 CLANG_ANALYZER_OUTPUT=html CLANG_ANALYZER_OUTPUT_DIR=analyzer-output && [[ -z `find analyzer-output -name "*.html"` ]]

   - stage: Validate
     env: Name=CocoaPods-Framework
     script: ./Scripts/cocoapod-validate.sh

   - stage: Validate
     env: Name=CocoaPods-Static-Lib
     script: ./Scripts/cocoapod-validate.sh --use-libraries

   - stage: Validate
     env: Name=Carthage
     script: ./Scripts/carthage-validate.sh

   - stage: Release
     if: tag IS present
     before_install: brew upgrade python # Needs Python 3
     script: ./Scripts/push-output.sh

# Turn on Docker, container-based infrastructure
sudo: false
